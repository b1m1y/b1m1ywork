import React, { useState } from 'react';
import './Auth.css';

function Auth({ onClose }) {
    const [server, setServer] = useState('');
    const [authMethod, setAuthMethod] = useState('–°–∏—Å—Ç–µ–º—ã');
    const [login, setLogin] = useState('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä');
    const [password, setPassword] = useState('');
    const [showPassword, setShowPassword] = useState(false);
    const [rememberMe, setRememberMe] = useState(false);

    const servers = [
        { name: '–°–µ—Ä–≤–µ—Ä 1', ip: '125.0.0.1:35000' },
        { name: '–°–µ—Ä–≤–µ—Ä 2', ip: '125.0.0.2:35000' },
        { name: '–°–µ—Ä–≤–µ—Ä 3', ip: '125.0.0.3:35000' },
    ];

    const handleLogin = () => {
        if (server) {
            onClose(true);
        } else {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä');
        }
    };

    return (
        <div className="auth-modal">
            <h2>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h2>
            <div className="auth-form">
                <div className="auth-row">
                    <label>–ò–º—è —Å–µ—Ä–≤–µ—Ä–∞:</label>
                    <select value={server} onChange={(e) => setServer(e.target.value)}>
                        <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä</option>
                        {servers.map((s) => (
                            <option key={s.ip} value={s.ip}>{s.name}</option>
                        ))}
                    </select>
                </div>
                <div className="auth-row">
                    <label>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è:</label>
                    <select value={authMethod} onChange={(e) => setAuthMethod(e.target.value)}>
                        <option value="–°–∏—Å—Ç–µ–º—ã">–°–∏—Å—Ç–µ–º—ã</option>
                        <option value="–î–æ–º–µ–Ω">–î–æ–º–µ–Ω</option>
                    </select>
                </div>
                <div className="auth-row">
                    <label>–õ–æ–≥–∏–Ω:</label>
                    <select value={login} onChange={(e) => setLogin(e.target.value)}>
                        <option value="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</option>
                        <option value="–°–æ—Ç—Ä—É–¥–Ω–∏–∫">–°–æ—Ç—Ä—É–¥–Ω–∏–∫</option>
                    </select>
                </div>
                <div className="auth-row">
                    <label>–ü–∞—Ä–æ–ª—å:</label>
                    <div className="password-container">
                        <input
                            type={showPassword ? "text" : "password"}
                            value={password}
                            onChange={(e) => setPassword(e.target.value)}
                        />
                        <button
                            type="button"
                            onMouseDown={() => setShowPassword(true)}
                            onMouseUp={() => setShowPassword(false)}
                            onMouseLeave={() => setShowPassword(false)}
                            className="password-toggle"
                        >
                            {showPassword ? 'üôÜ' : 'üôÖ'}
                        </button>
                    </div>
                </div>
                <div className="auth-row remember-me">
                    <label>
                        <input
                            type="checkbox"
                            checked={rememberMe}
                            onChange={(e) => setRememberMe(e.target.checked)}
                        />
                        –ó–∞–ø–æ–º–Ω–∏—Ç—å –º–µ–Ω—è
                    </label>
                </div>
                <div className="auth-row">
                    <a href="#" className="forget-me">–ó–∞–±—ã—Ç—å –º–µ–Ω—è</a>
                </div>
                <div className="auth-buttons">
                    <button onClick={handleLogin}>–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ</button>
                    <button onClick={() => onClose(false)}>–û—Ç–º–µ–Ω–∞</button>
                </div>
            </div>
        </div>
    );
}

export default Auth;